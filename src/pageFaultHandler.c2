/*
 * Created Date: Wednesday October 11th 2023
 * Author: Lilith
 * -----
 * Last Modified: Wednesday October 11th 2023 9:51:33 pm
 * Modified By: Lilith (definitelynotagirl115169@gmail.com)
 * -----
 * Copyright (c) 2023-2023 DefinitelyNotAGirl@github
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include <stdint>
#include <io>
#include <userspace>

class siginfo_t:
	public u32 signo;/* Signal number */
	public u32 code;/* Signal code */
	public u32 pid;/* Sending process ID */
	public u32 uid;/* Real user ID of sending process */
	public ptr_t addr;/* Address of faulting instruction, for page faults address accessed to cause fault */
	public u32 status;/* Exit value or signal */

void pageFaultHandler(u64 signo, u64 siginfo__, u64 ucontext):
	(r8) siginfo_t* siginfo;
	(r9) ptr_t address;
	(r10) u64 r10;
	siginfo = siginfo__;
	address = siginfo->addr;
	out << "\n\1b[31m[PAGE FAULT]\1b[0m\n";
//	if(0x00 == address):
//		out << "\1b[31mNULL POINTER EXCEPTION\1b[0m\n";
	out << "address = ";
	r10 = address;
	out << r10;
	out << endl;
	exit(signo);

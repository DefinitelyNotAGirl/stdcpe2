/*
 * Created Date: Sunday October 15th 2023
 * Author: Lilith
 * -----
 * Last Modified: Sunday October 15th 2023 1:42:24 pm
 * Modified By: Lilith (definitelynotagirl115169@gmail.com)
 * -----
 * Copyright (c) 2023-2023 DefinitelyNotAGirl@github
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

.extern __cpe2_chstrl
.extern cpe2malloc

.global charP8_UTHS_u64
charP8_UTHS_u64:
    //rdi: u64 n
    charP8_UTHS_u64.prolouge:
        sub $16, %rsp
        mov %rdi, (%rsp)
    charP8_UTHS_u64.body:
        //aquire memory
        call __cpe2_chstrl
        add $3, %rax
        mov %rax, 8(%rsp)
        mov %rax, %rdi
        call cpe2malloc
        //fill buffer
        mov (%rsp), %rdi
        mov 8(%rsp), %rsi
        dec %rsi
        movb $'0',  (%rax)
        movb $'x', 1(%rax)
        movb $0x00, (%rax,%rsi)
        dec %rsi
        .L1:
            test %rdi, %rdi
            jz charP8_UTHS_u64.epilouge
        .L2:
            mov %rdi, %rdx
            and $0xF, %rdx
            cmp $0xA, %rdx
            jl .L4
            add $0x27, %rdx
            .L4:
            add $0x30, %rdx
            mov %dl, (%rax,%rsi)
            dec %rsi
            shr $4, %rdi
            jmp .L1
    charP8_UTHS_u64.epilouge:
        add $16, %rsp
        ret

/*
 * Created Date: Saturday September 2nd 2023
 * Author: Lilith
 * -----
 * Last Modified: Saturday September 2nd 2023 9:58:39 pm
 * Modified By: Lilith (definitelynotagirl115169@gmail.com)
 * -----
 * Copyright (c) 2023-2023 DefinitelyNotAGirl@github
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
#pragma once

/**
    @desc allocates itemCount*size bytes of memory, initializes the memory to 0 and returns the address
*/
void* calloc(u64 itemCount, u64 size);

/**
    @desc allocates size bytes of memory, zeros out the allocated space and returns the address
*/
void* zalloc(u64 size);

/**
    @desc allocates size bytes of memory and returns the address
*/
void* malloc(u64 size);

/**
    @desc free's the memory at the address ptr
*/
void free(void* ptr);

/**
    @desc same as "void* newBuffer = malloc(newSize);memcpy(newBuffer,ptr,oldSize);", newBuffer may or may not be the same as ptr,
    if realloc moves the buffer it will automatically free the old buffer
*/
void* realloc(void* ptr, u64 newSize);

/**
    @desc copies size number of bytes from src to dst
*/
void memcpy(void* dst, void* src, u64 size);

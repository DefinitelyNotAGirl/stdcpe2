/*
 * Created Date: Wednesday October 4th 2023
 * Author: Lilith
 * -----
 * Last Modified: Wednesday October 4th 2023 2:57:00 am
 * Modified By: Lilith (definitelynotagirl115169@gmail.com)
 * -----
 * Copyright (c) 2023-2023 DefinitelyNotAGirl@github
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
#pragma once

#include <io>

nodoc export class stream extends primitive64;

nodoc primitiveAssign primitiveInPlace void operator=(stream,u64);
nodoc primitiveAssign primitiveInPlace void operator=(stream,stream);

nodoc primitiveEqual bool operator==(stream,stream);
nodoc primitiveNotEqual bool operator!=(stream,stream);

extern stream info;
extern stream error;
extern stream warning;

nodoc stream operator<<(stream __stream,char* str);
nodoc stream operator<<(stream __stream,char c);
nodoc stream operator<<(stream __stream,u64 n);
nodoc stream operator<<(stream __stream,i64 n);
nodoc stream operator<<(stream __stream,u32 n);
nodoc stream operator<<(stream __stream,i32 n);
nodoc stream operator<<(stream __stream,u16 n);
nodoc stream operator<<(stream __stream,i16 n);
nodoc stream operator<<(stream __stream,u8 n);
nodoc stream operator<<(stream __stream,i8 n);
nodoc stream operator<<(stream __stream,f64 n);
nodoc stream operator<<(stream __stream,f32 n);
nodoc stream operator<<(stream __stream,format f);
nodoc stream operator<<(stream __stream,ptr_t ptr);

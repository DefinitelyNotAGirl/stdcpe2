/*
 * Created Date: Sunday August 27th 2023
 * Author: Lilith
 * -----
 * Last Modified: Thu Jul 18 2024
 * Modified By: Lilith
 * -----
 * Copyright (c) 2023-2024 DefinitelyNotAGirl@github
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
*/
#pragma once

#autodecl integer u64 8 nodoc
#autodecl integer ptr_t 8 nodoc
primitiveAssign primitiveInPlace void operator=(u64,ptr_t);
#autodecl integer i64 8 nodoc
#autodecl integer u32 4 nodoc
class i32 extends primitive32;
#autodecl integer i32 4 nodoc
#autodecl integer u16 2 nodoc
class i16 extends primitive16;
#autodecl integer i16 2 nodoc
#autodecl integer u8 1 nodoc
class i8 extends primitive8;
#autodecl integer i8 1 nodoc
#autodecl integer bool 1 nodoc

//
//
// ptr_t
//
//
nodoc primitiveEqual bool operator==(u64,ptr_t);

//
//
//char
//
//
nodoc primitiveAssign primitiveInPlace void operator=(char,char);
nodoc primitiveAssign primitiveInPlace void operator=(char,u64);

nodoc primitiveAdd primitiveInPlace void operator+=(u64,char*);

nodoc primitiveNotEqual bool operator!=(char,char);
nodoc primitiveNotEqual bool operator!=(char,u64);
nodoc primitiveNotEqual bool operator!=(u64,char);

nodoc primitiveEqual bool operator==(char,char);
nodoc primitiveEqual bool operator==(char,u64);
nodoc primitiveEqual bool operator==(u64,char);

nodoc primitiveGreater bool operator>(char,char);
nodoc primitiveGreater bool operator>(char,u64);
nodoc primitiveGreater bool operator>(u64,char);

nodoc primitiveGreaterEqual bool operator>=(char,char);
nodoc primitiveGreaterEqual bool operator>=(char,u64);
nodoc primitiveGreaterEqual bool operator>=(u64,char);

nodoc primitiveLess bool operator<(char,char);
nodoc primitiveLess bool operator<(char,u64);
nodoc primitiveLess bool operator<(u64,char);

nodoc primitiveLessEqual bool operator<=(char,char);
nodoc primitiveLessEqual bool operator<=(char,u64);
nodoc primitiveLessEqual bool operator<=(u64,char);

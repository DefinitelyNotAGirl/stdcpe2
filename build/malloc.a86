# cpe2

.extern cpe2exit
.extern u64_NULL
.extern u64_nullptr
.extern bool_false
.extern bool_true
.extern charP8_cpuVendor
.extern ptr_t_calloc_u64_u64
.extern ptr_t_zalloc_u64
.extern ptr_t_malloc_u64
.extern void_free_ptr_t
.extern ptr_t_realloc_ptr_t_u64
.extern void_memcpy_ptr_t_ptr_t_u64
.extern calloc
.extern malloc
.extern free
.extern strlen
.extern __fd_cout
.extern __fd_out
.extern __fd_cerr
.extern __fd_err
.extern format_num
.extern format_dec
.extern format_hex
.extern format_bin
.extern format_oct
.extern char_endl
.extern u64_write___fd_u64_u64
.extern u64_write___fd_charP8_u64
.extern __fd_operatorLESSERLESSER___fd_charP8
.extern __fd_operatorLESSERLESSER___fd_char
.extern __fd_operatorLESSERLESSER___fd_u64
.extern __fd_operatorLESSERLESSER___fd_i64
.extern __fd_operatorLESSERLESSER___fd_u32
.extern __fd_operatorLESSERLESSER___fd_i32
.extern __fd_operatorLESSERLESSER___fd_u16
.extern __fd_operatorLESSERLESSER___fd_i16
.extern __fd_operatorLESSERLESSER___fd_u8
.extern __fd_operatorLESSERLESSER___fd_i8
.extern __fd_operatorLESSERLESSER___fd_f64
.extern __fd_operatorLESSERLESSER___fd_f32
.extern __fd_operatorLESSERLESSER___fd_format
.global u32___malloc_magic
.data
ptr_t___malloc_ptr:
	.quad 0
u64___malloc_size:
	.quad 0
u64___malloc_free:
	.quad 0
u64___malloc_pageSize:
	.quad 0
u32___malloc_magic:
	.int 290526007
local.src_malloc.c2.unnamed423:
	.byte 102
	.byte 114
	.byte 101
	.byte 101
	.byte 32
	.byte 105
	.byte 110
	.byte 118
	.byte 97
	.byte 108
	.byte 105
	.byte 100
	.byte 32
	.byte 109
	.byte 97
	.byte 103
	.byte 105
	.byte 99
	.byte 32
	.byte 118
	.byte 97
	.byte 108
	.byte 117
	.byte 101
	.byte 32
	.byte 105
	.byte 110
	.byte 32
	.byte 109
	.byte 101
	.byte 109
	.byte 111
	.byte 114
	.byte 121
	.byte 32
	.byte 98
	.byte 108
	.byte 111
	.byte 99
	.byte 107
	.byte 10
	.byte 0
.section .rodata
.bss
.text
	.global cpe2mallocInit
cpe2mallocInit:
	movq $4096, u64___malloc_pageSize
	mov $0, %rax
	jmp cpe2mallocInit.epilogue
	cpe2mallocInit.epilogue:
	ret

	.global void___kalloc_u64
void___kalloc_u64:
	xor %rax, %rax
	mov $0, %rax
	jmp void___kalloc_u64.epilogue
	void___kalloc_u64.epilogue:
	ret

	.global ptr_t_malloc_u64
ptr_t_malloc_u64:
	sub $32, %rsp
	# 
	cmp u64___malloc_free,%rdi
	jge ptr_t_malloc_u64.boolRetConditional0
	clc
	ptr_t_malloc_u64.boolRetConditional0.reentry:
	jc ptr_t_malloc_u64.if0
	# 
	ptr_t_malloc_u64.conditional1.reentry:
	mov ptr_t___malloc_ptr, %r10
	mov %rdi, 0(%r10)
	mov u32___malloc_magic, %ecx
	mov %ecx, 4(%r10)
	mov ptr_t___malloc_ptr, %r11
	add %rdi, %rcx
	mov %r11, %rax
	jmp ptr_t_malloc_u64.epilogue
	ptr_t_malloc_u64.epilogue:
	add $32, %rsp
	ret
	ptr_t_malloc_u64.boolRetConditional0:
		stc
		jmp ptr_t_malloc_u64.boolRetConditional0.reentry
	ptr_t_malloc_u64.if0:
		# allocSize is stored in r8
		mov u64___malloc_pageSize, %r8
		# 
		ptr_t_malloc_u64.if0.while0.reentry:
		cmp %rdi,%r8
		jge ptr_t_malloc_u64.if0.boolRetConditional0
		clc
		ptr_t_malloc_u64.if0.boolRetConditional0.reentry:
		jc ptr_t_malloc_u64.if0.while0
		# 
		ptr_t_malloc_u64.if0.while0.reentry:
		mov %rdi, 0(%rsp)
		mov %rsi, 8(%rsp)
		mov %r8, 16(%rsp)
		mov %r9, 24(%rsp)
		mov %r8, %rdi
		call void___kalloc_u64
		mov 0(%rsp), %rdi
		mov 8(%rsp), %rsi
		mov 16(%rsp), %r8
		mov 24(%rsp), %r9
		jmp ptr_t_malloc_u64.conditional1.reentry
		ptr_t_malloc_u64.if0.boolRetConditional0:
			stc
			jmp ptr_t_malloc_u64.if0.boolRetConditional0.reentry
		ptr_t_malloc_u64.if0.while0:
			jmp ptr_t_malloc_u64.if0.while0.reentry

	.global u64_free_ptr_t
u64_free_ptr_t:
	sub $32, %rsp
	mov %rdi, %rsi
	sub $8, %rsi
	# 
	mov u32___malloc_magic, %ecx
	cmp %ecx, 4(%rsi)
	jne u64_free_ptr_t.boolRetConditional0
	clc
	u64_free_ptr_t.boolRetConditional0.reentry:
	jc u64_free_ptr_t.if0
	# 
	u64_free_ptr_t.conditional1.reentry:
	mov $0, %rax
	jmp u64_free_ptr_t.epilogue
	u64_free_ptr_t.epilogue:
	add $32, %rsp
	ret
	u64_free_ptr_t.boolRetConditional0:
		stc
		jmp u64_free_ptr_t.boolRetConditional0.reentry
	u64_free_ptr_t.if0:
		mov %rdi, 0(%rsp)
		mov %rsi, 8(%rsp)
		mov %r8, 16(%rsp)
		mov __fd_out, %rdi
		mov $local.src_malloc.c2.unnamed423, %rsi
		call __fd_operatorLESSERLESSER___fd_charP8
		mov 0(%rsp), %rdi
		mov 8(%rsp), %rsi
		mov 16(%rsp), %r8
		jmp u64_free_ptr_t.conditional1.reentry

